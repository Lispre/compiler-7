Terminals which are not used

   ID
   TRUE
   FALSE
   SYMBOL
   expr_1


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component

    4 component: class_interface
    5          | class_implementation
    6          | protocol

    7 class_interface: class_interface_header class_interface_body

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables AT_END
   15                     | protocol_reference_list interface_declaration_list AT_END
   16                     | instance_variables interface_declaration_list AT_END
   17                     | protocol_reference_list AT_END
   18                     | instance_variables AT_END
   19                     | interface_declaration_list AT_END
   20                     | AT_END

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN

   22 ids_list: IDENTIFIER
   23         | ids_list error IDENTIFIER
   24         | ids_list COMMA IDENTIFIER

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   26                   | OPEN_S instance_variable_declarations error
   27                   | OPEN_S instance_variable_declarations

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   29                               | instance_variable_declaration
   30                               | variable_declaration_list

   31 instance_variable_declaration: visibility_specification variable_declaration_list

   32 variable_declaration_list: variable_declaration_list variable_declaration
   33                          | variable_declaration

   34 visibility_specification: AT_PRIVATE
   35                         | AT_PROTECTED
   36                         | AT_PUBLIC

   37 variable_declaration: type IDENTIFIER SEMI_COMA
   38                     | type IDENTIFIER error
   39                     | type IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr error
   41                     | CONST type IDENTIFIER SEMI_COMA
   42                     | CONST type IDENTIFIER error
   43                     | CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr error
   45                     | Enum
   46                     | structrule
   47                     | ArrayOne
   48                     | ArrayN

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA
   50     | TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

   53 variable_declarations: type IDENTIFIER SEMI_COMA
   54                      | variable_declarations type IDENTIFIER SEMI_COMA
   55                      | type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   56                      | variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations CONST type IDENTIFIER SEMI_COMA
   58                      | CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   60                      | CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

   65 array_body: array_body COMMA expr
   66           | expr
   67           | array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   68           | OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR
   73      | Multi OPEN_ARR INT_VAL CLOSE_ARR

   74 array_body2: OPEN_S array_body CLOSE_S
   75            | expr
   76            | array_body2 COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA expr

   78 type: simple_type
   79     | complex_type

   80 simple_type: INT
   81            | CHAR
   82            | FLOAT
   83            | NSSTRING
   84            | VOID

   85 complex_type: IDENTIFIER MULTI

   86 interface_declaration_list: interface_declaration_list interface_declaration
   87                           | interface_declaration

   88 interface_declaration: class_method_declaration
   89                      | instance_method_declaration

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA
   91                         | PLUS p_type method_selector error
   92                         | PLUS method_selector SEMI_COMA
   93                         | PLUS method_selector error

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA
   95                            | MINUS method_selector SEMI_COMA
   96                            | MINUS p_type method_selector error
   97                            | MINUS method_selector error

   98 p_type: OPEN_P type CLOSE_P
   99       | error type CLOSE_P
  100       | OPEN_P type error

  101 @1: /* empty */

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 parameter_list
  103                | IDENTIFIER

  104 parameter_list: parameter_list SEMI_COLUMN parameter
  105               | parameter_list IDENTIFIER SEMI_COLUMN parameter
  106               | parameter_list IDENTIFIER error parameter
  107               | parameter_list IDENTIFIER parameter
  108               | parameter

  109 parameter: p_type IDENTIFIER

  110 try_catch: TRY block_body catch_statment

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment
  112               | FINALLY block_body

  113 Exception_type: NUllPointerException
  114               | OUtOfBoundryException
  115               | CAstException

  116 class_implementation: class_implementation_header class_implementation_body

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  118                            | AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER
  119                            | AT_IMPLEMENTATION IDENTIFIER IDENTIFIER
  120                            | AT_IMPLEMENTATION IDENTIFIER

  121 class_implementation_body: instance_variables implementation_definition_list AT_END
  122                          | instance_variables AT_END
  123                          | implementation_definition_list AT_END

  124 implementation_definition_list: implementation_definition_list implementation_definition
  125                               | implementation_definition

  126 implementation_definition: class_implementation_definition
  127                          | instance_implementation_definition

  128 class_implementation_definition: class_implementation_definition_header block_body

  129 class_implementation_definition_header: PLUS p_type method_selector
  130                                       | PLUS method_selector

  131 instance_implementation_definition: instance_implementation_definition_header block_body

  132 instance_implementation_definition_header: MINUS p_type method_selector
  133                                          | MINUS method_selector

  134 statement_list: statement_list statement
  135               | statement

  136 statement: loop_statement
  137          | conditional_statement
  138          | expr SEMI_COMA
  139          | variable_declaration

  140 @2: /* empty */

  141 statement: @2 block_body
  142          | return_statement
  143          | try_catch

  144 return_statement: RETURN expr SEMI_COMA
  145                 | RETURN expr error

  146 loop_statement: for_loop
  147               | while_loop
  148               | do_while_loop

  149 for_loop: for_loop_header statement

  150 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  151                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  152                | FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  153                | FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  155                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  156                | FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  157                | FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  159                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  160                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  161                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  162                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  163                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  164 for_initializer: INT IDENTIFIER EQUAL expr
  165                | INT IDENTIFIER expr
  166                | INT IDENTIFIER error expr
  167                | IDENTIFIER EQUAL expr
  168                | IDENTIFIER expr
  169                | IDENTIFIER error expr
  170                | IDENTIFIER

  171 logic_expr: expr LESS_THAN expr
  172           | expr MORE_THAN expr
  173           | expr LESS_OR_EQUAL expr
  174           | expr MORE_OR_EQUAL expr
  175           | expr EQUAL_EQUAL expr
  176           | NOT_EQUAL expr
  177           | OPEN_P logic_expr CLOSE_P
  178           | logic_expr AND_AND logic_expr
  179           | logic_expr OR_OR logic_expr

  180 expr: assign_expr
  181     | simple_expr

  182 logic_expr2: expr2 LESS_THAN expr2
  183            | expr2 MORE_THAN expr2
  184            | expr2 LESS_OR_EQUAL expr2
  185            | expr2 MORE_OR_EQUAL expr2
  186            | expr2 EQUAL_EQUAL expr2
  187            | NOT_EQUAL expr2
  188            | OPEN_P logic_expr2 CLOSE_P
  189            | logic_expr2 AND_AND logic_expr2
  190            | logic_expr2 OR_OR logic_expr2
  191            | error expr2
  192            | OPEN_P logic_expr2 error
  193            | error logic_expr2 CLOSE_P

  194 expr2: simple_expr

  195 assign_expr: long_id EQUAL simple_expr

  196 long_id: long_id DOT IDENTIFIER
  197        | message_call
  198        | IDENTIFIER

  199 simple_expr: STRING_VAL
  200            | INT_VAL
  201            | FLOAT_VAL
  202            | CHAR_VAL
  203            | long_id
  204            | simple_expr PLUS simple_expr
  205            | simple_expr MINUS simple_expr
  206            | simple_expr MULTI simple_expr
  207            | simple_expr DIV simple_expr
  208            | OPEN_P simple_expr CLOSE_P
  209            | p_type simple_expr

  210 block_body: OPEN_S statement_list CLOSE_S
  211           | OPEN_S CLOSE_S

  212 while_loop: while_loop_header statement

  213 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P
  214                  | WHILE OPEN_P logic_expr error
  215                  | WHILE logic_expr CLOSE_P
  216                  | WHILE error logic_expr CLOSE_P

  217 do_while_loop: DO statement while_loop_header SEMI_COMA

  218 conditional_statement: if_header statement
  219                      | if_header statement ELSE statement
  220                      | switch

  221 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  222       | SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  223       | SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  224       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  225       | SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

  226 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  227            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body
  228            | DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  229            | DEFAULT SEMI_COLUMN statement error SEMI_COMA

  230 switch_statement: logic_expr
  231                 | expr

  232 case_statement: logic_expr2
  233               | expr2

  234 if_header: IF OPEN_P logic_expr CLOSE_P
  235          | IF OPEN_P logic_expr error
  236          | IF logic_expr CLOSE_P
  237          | IF error logic_expr CLOSE_P

  238 message_call: OPEN_ARR sender message CLOSE_ARR

  239 sender: message_call
  240       | IDENTIFIER

  241 message: IDENTIFIER
  242        | IDENTIFIER SEMI_COLUMN argument_list

  243 argument_list: argument_list argument
  244              | argument

  245 argument: SEMI_COLUMN simple_expr
  246         | error simple_expr
  247         | IDENTIFIER SEMI_COLUMN simple_expr
  248         | IDENTIFIER simple_expr
  249         | IDENTIFIER error simple_expr

  250 protocol: protocol_header protocol_body

  251 protocol_header: AT_PROTOCOL IDENTIFIER

  252 protocol_body: protocol_reference_list interface_declaration_list AT_END
  253              | interface_declaration_list AT_END
  254              | protocol_reference_list AT_END
  255              | AT_END


Terminals, with rules where they appear

$end (0) 0
error (256) 9 23 26 38 40 42 44 91 93 96 97 99 100 106 118 145 151
    153 155 157 166 169 191 192 193 214 216 222 223 224 225 227 229
    235 237 246 249
TRY (258) 110
CATCH (259) 111
NSEXception (260) 111
NUllPointerException (261) 113
OUtOfBoundryException (262) 114
CAstException (263) 115
FINALLY (264) 112
AT_INTERFACE (265) 8 9 10 11 12
IDENTIFIER (266) 8 9 10 11 12 22 23 24 37 38 39 40 41 42 43 44 49 50
    51 52 53 54 55 56 57 58 59 60 61 62 63 64 69 70 71 85 102 103 105
    106 107 109 117 118 119 120 164 165 166 167 168 169 170 196 198
    240 241 242 247 248 249 251
SEMI_COLUMN (267) 8 10 55 56 59 60 102 104 105 117 226 227 228 229
    242 245 247
NSSTRING (268) 83
FLOAT (269) 82
CHAR (270) 81
INT (271) 80 164 165 166
SEMI_COMA (272) 37 39 41 43 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 69 70 71 90 92 94 95 138 144 150 151 152 153 154 155 156
    157 158 159 160 161 162 163 217 226 227 228 229
ID (273)
AT_PUBLIC (274) 36
AT_PROTECTED (275) 35
AT_PRIVATE (276) 34
OPEN_S (277) 25 26 27 49 50 51 52 61 63 64 69 71 74 76 210 211 221
    222 223 224
CLOSE_S (278) 25 49 50 51 52 61 63 64 69 71 74 76 210 211 221 222 223
    225
COMMA (279) 24 65 67 76 77
LESS_THAN (280) 21 171 182
MORE_THAN (281) 21 172 183
AT_END (282) 13 14 15 16 17 18 19 20 121 122 123 252 253 254 255
CONST (283) 41 42 43 44 57 58 59 60
VOID (284) 84
PLUS (285) 90 91 92 93 129 130 204
MINUS (286) 94 95 96 97 132 133 205
OPEN_P (287) 98 100 111 150 151 154 155 158 159 160 161 162 163 177
    188 192 208 213 214 221 223 224 225 226 227 234 235
CLOSE_P (288) 98 99 111 150 152 153 154 156 157 158 159 160 161 162
    163 177 188 193 208 213 215 216 221 222 224 225 226 227 234 236
    237
AT_IMPLEMENTATION (289) 117 118 119 120
AND_AND (290) 178 189
OR_OR (291) 179 190
STRING_VAL (292) 199
FLOAT_VAL (293) 201
LESS_OR_EQUAL (294) 173 184
CHAR_VAL (295) 202
INT_VAL (296) 61 62 63 67 68 72 73 200
MORE_OR_EQUAL (297) 174 185
MULTI (298) 85 206
EQUAL_EQUAL (299) 175 186
NOT_EQUAL (300) 176 187
FOR (301) 150 151 152 153 154 155 156 157 158 159 160 161 162 163
EQUAL (302) 39 40 43 44 61 63 64 67 68 69 71 164 167 195
DIV (303) 207
WHILE (304) 213 214 215 216
IF (305) 234 235 236 237
OPEN_ARR (306) 61 62 63 64 67 68 72 73 238
CLOSE_ARR (307) 61 62 63 64 67 68 72 73 238
TRUE (308)
FALSE (309)
RETURN (310) 144 145
AT_PROTOCOL (311) 251
DO (312) 217
DOT (313) 196
SYMBOL (314)
SWITCH (315) 221 222 223 224 225
BREAK (316) 226 228
DEFAULT (317) 228 229
CASE (318) 226 227
STRUCT (319) 51 52
TYPEDEF (320) 50
ENUM (321) 49 50
if_h (322)
ELSE (323) 219
expr_1 (324)
p_type_expr_prec (325)
long_id_prec (326)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
program (73)
    on left: 1, on right: 0
components (74)
    on left: 2 3, on right: 1 2
component (75)
    on left: 4 5 6, on right: 2 3
class_interface (76)
    on left: 7, on right: 4
class_interface_header (77)
    on left: 8 9 10 11 12, on right: 7
class_interface_body (78)
    on left: 13 14 15 16 17 18 19 20, on right: 7
protocol_reference_list (79)
    on left: 21, on right: 13 14 15 17 252 254
ids_list (80)
    on left: 22 23 24, on right: 21 23 24 49 50 52
instance_variables (81)
    on left: 25 26 27, on right: 13 14 16 18 121 122
instance_variable_declarations (82)
    on left: 28 29 30, on right: 25 26 27 28
instance_variable_declaration (83)
    on left: 31, on right: 28 29
variable_declaration_list (84)
    on left: 32 33, on right: 30 31 32
visibility_specification (85)
    on left: 34 35 36, on right: 31
variable_declaration (86)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48, on right: 32 33 139
Enum (87)
    on left: 49 50, on right: 45
structrule (88)
    on left: 51 52, on right: 46
variable_declarations (89)
    on left: 53 54 55 56 57 58 59 60, on right: 51 52 54 56 57 59
ArrayOne (90)
    on left: 61 62 63 64, on right: 47
array_body (91)
    on left: 65 66 67 68, on right: 63 64 65 67 74 76
ArrayN (92)
    on left: 69 70 71, on right: 48
Multi (93)
    on left: 72 73, on right: 69 70 71 73
array_body2 (94)
    on left: 74 75 76 77, on right: 71 76 77
type (95)
    on left: 78 79, on right: 37 38 39 40 41 42 43 44 53 54 55 56 57
    58 59 60 61 62 63 64 69 70 71 98 99 100
simple_type (96)
    on left: 80 81 82 83 84, on right: 78
complex_type (97)
    on left: 85, on right: 79
interface_declaration_list (98)
    on left: 86 87, on right: 13 15 16 19 86 252 253
interface_declaration (99)
    on left: 88 89, on right: 86 87
class_method_declaration (100)
    on left: 90 91 92 93, on right: 88
instance_method_declaration (101)
    on left: 94 95 96 97, on right: 89
p_type (102)
    on left: 98 99 100, on right: 90 91 94 96 109 129 132 209
method_selector (103)
    on left: 102 103, on right: 90 91 92 93 94 95 96 97 129 130 132
    133
@1 (104)
    on left: 101, on right: 102
parameter_list (105)
    on left: 104 105 106 107 108, on right: 102 104 105 106 107
parameter (106)
    on left: 109, on right: 104 105 106 107 108
try_catch (107)
    on left: 110, on right: 143
catch_statment (108)
    on left: 111 112, on right: 110 111
Exception_type (109)
    on left: 113 114 115, on right: 111
class_implementation (110)
    on left: 116, on right: 5
class_implementation_header (111)
    on left: 117 118 119 120, on right: 116
class_implementation_body (112)
    on left: 121 122 123, on right: 116
implementation_definition_list (113)
    on left: 124 125, on right: 121 123 124
implementation_definition (114)
    on left: 126 127, on right: 124 125
class_implementation_definition (115)
    on left: 128, on right: 126
class_implementation_definition_header (116)
    on left: 129 130, on right: 128
instance_implementation_definition (117)
    on left: 131, on right: 127
instance_implementation_definition_header (118)
    on left: 132 133, on right: 131
statement_list (119)
    on left: 134 135, on right: 134 210
statement (120)
    on left: 136 137 138 139 141 142 143, on right: 134 135 149 212
    217 218 219 226 227 228 229
@2 (121)
    on left: 140, on right: 141
return_statement (122)
    on left: 144 145, on right: 142
loop_statement (123)
    on left: 146 147 148, on right: 136
for_loop (124)
    on left: 149, on right: 146
for_loop_header (125)
    on left: 150 151 152 153 154 155 156 157 158 159 160 161 162 163
   , on right: 149
for_initializer (126)
    on left: 164 165 166 167 168 169 170, on right: 150 151 152 153
    158 159 160
logic_expr (127)
    on left: 171 172 173 174 175 176 177 178 179, on right: 150 151
    152 153 154 155 156 157 159 161 177 178 179 213 214 215 216 230
    234 235 236 237
expr (128)
    on left: 180 181, on right: 65 66 67 68 75 77 138 144 145 150 151
    152 153 154 155 156 157 158 162 164 165 166 167 168 169 171 172
    173 174 175 176 231
logic_expr2 (129)
    on left: 182 183 184 185 186 187 188 189 190 191 192 193,
    on right: 188 189 190 192 193 232
expr2 (130)
    on left: 194, on right: 182 183 184 185 186 187 191 233
assign_expr (131)
    on left: 195, on right: 180
long_id (132)
    on left: 196 197 198, on right: 195 196 203
simple_expr (133)
    on left: 199 200 201 202 203 204 205 206 207 208 209,
    on right: 39 40 43 44 55 56 59 60 181 194 195 204 205 206 207 208
    209 245 246 247 248 249
block_body (134)
    on left: 210 211, on right: 110 111 112 128 131 141
while_loop (135)
    on left: 212, on right: 147
while_loop_header (136)
    on left: 213 214 215 216, on right: 212 217
do_while_loop (137)
    on left: 217, on right: 148
conditional_statement (138)
    on left: 218 219 220, on right: 137
switch (139)
    on left: 221 222 223 224 225, on right: 220
switch_body (140)
    on left: 226 227 228 229, on right: 221 222 223 224 225 226 227
switch_statement (141)
    on left: 230 231, on right: 221 222 223 224 225
case_statement (142)
    on left: 232 233, on right: 226 227
if_header (143)
    on left: 234 235 236 237, on right: 218 219
message_call (144)
    on left: 238, on right: 197 239
sender (145)
    on left: 239 240, on right: 238
message (146)
    on left: 241 242, on right: 238
argument_list (147)
    on left: 243 244, on right: 242 243
argument (148)
    on left: 245 246 247 248 249, on right: 243 244
protocol (149)
    on left: 250, on right: 6
protocol_header (150)
    on left: 251, on right: 250
protocol_body (151)
    on left: 252 253 254 255, on right: 250


state 0

    0 $accept: . program $end

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    program                      go to state 4
    components                   go to state 5
    component                    go to state 6
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 1

    8 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE . IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE . IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE . IDENTIFIER

    IDENTIFIER  shift, and go to state 13


state 2

  117 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  118                            | AT_IMPLEMENTATION . IDENTIFIER error IDENTIFIER
  119                            | AT_IMPLEMENTATION . IDENTIFIER IDENTIFIER
  120                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 14


state 3

  251 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 15


state 4

    0 $accept: program . $end

    $end  shift, and go to state 16


state 5

    1 program: components .
    2 components: components . component

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    $default  reduce using rule 1 (program)

    component                    go to state 17
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 6

    3 components: component .

    $default  reduce using rule 3 (components)


state 7

    4 component: class_interface .

    $default  reduce using rule 4 (component)


state 8

    7 class_interface: class_interface_header . class_interface_body

    OPEN_S     shift, and go to state 18
    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    class_interface_body         go to state 23
    protocol_reference_list      go to state 24
    instance_variables           go to state 25
    interface_declaration_list   go to state 26
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 9

    5 component: class_implementation .

    $default  reduce using rule 5 (component)


state 10

  116 class_implementation: class_implementation_header . class_implementation_body

    OPEN_S  shift, and go to state 18
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    instance_variables                         go to state 32
    class_implementation_body                  go to state 33
    implementation_definition_list             go to state 34
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 11

    6 component: protocol .

    $default  reduce using rule 6 (component)


state 12

  250 protocol: protocol_header . protocol_body

    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 40
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    protocol_reference_list      go to state 41
    interface_declaration_list   go to state 42
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29
    protocol_body                go to state 43


state 13

    8 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER . error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER . IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER .

    error        shift, and go to state 44
    IDENTIFIER   shift, and go to state 45
    SEMI_COLUMN  shift, and go to state 46

    OPEN_S     reduce using rule 12 (class_interface_header)
    LESS_THAN  reduce using rule 12 (class_interface_header)
    AT_END     reduce using rule 12 (class_interface_header)
    PLUS       reduce using rule 12 (class_interface_header)
    MINUS      reduce using rule 12 (class_interface_header)


state 14

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  118                            | AT_IMPLEMENTATION IDENTIFIER . error IDENTIFIER
  119                            | AT_IMPLEMENTATION IDENTIFIER . IDENTIFIER
  120                            | AT_IMPLEMENTATION IDENTIFIER .

    error        shift, and go to state 47
    IDENTIFIER   shift, and go to state 48
    SEMI_COLUMN  shift, and go to state 49

    OPEN_S  reduce using rule 120 (class_implementation_header)
    PLUS    reduce using rule 120 (class_implementation_header)
    MINUS   reduce using rule 120 (class_implementation_header)


state 15

  251 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 251 (protocol_header)


state 16

    0 $accept: program $end .

    $default  accept


state 17

    2 components: components component .

    $default  reduce using rule 2 (components)


state 18

   25 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   26                   | OPEN_S . instance_variable_declarations error
   27                   | OPEN_S . instance_variable_declarations

    IDENTIFIER    shift, and go to state 50
    NSSTRING      shift, and go to state 51
    FLOAT         shift, and go to state 52
    CHAR          shift, and go to state 53
    INT           shift, and go to state 54
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CONST         shift, and go to state 58
    VOID          shift, and go to state 59
    STRUCT        shift, and go to state 60
    TYPEDEF       shift, and go to state 61
    ENUM          shift, and go to state 62

    instance_variable_declarations  go to state 63
    instance_variable_declaration   go to state 64
    variable_declaration_list       go to state 65
    visibility_specification        go to state 66
    variable_declaration            go to state 67
    Enum                            go to state 68
    structrule                      go to state 69
    ArrayOne                        go to state 70
    ArrayN                          go to state 71
    type                            go to state 72
    simple_type                     go to state 73
    complex_type                    go to state 74


state 19

   21 protocol_reference_list: LESS_THAN . ids_list MORE_THAN

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 76


state 20

   20 class_interface_body: AT_END .

    $default  reduce using rule 20 (class_interface_body)


state 21

   90 class_method_declaration: PLUS . p_type method_selector SEMI_COMA
   91                         | PLUS . p_type method_selector error
   92                         | PLUS . method_selector SEMI_COMA
   93                         | PLUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 80
    method_selector  go to state 81


state 22

   94 instance_method_declaration: MINUS . p_type method_selector SEMI_COMA
   95                            | MINUS . method_selector SEMI_COMA
   96                            | MINUS . p_type method_selector error
   97                            | MINUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 82
    method_selector  go to state 83


state 23

    7 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 7 (class_interface)


state 24

   13 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list . instance_variables AT_END
   15                     | protocol_reference_list . interface_declaration_list AT_END
   17                     | protocol_reference_list . AT_END

    OPEN_S  shift, and go to state 18
    AT_END  shift, and go to state 84
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    instance_variables           go to state 85
    interface_declaration_list   go to state 86
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 25

   16 class_interface_body: instance_variables . interface_declaration_list AT_END
   18                     | instance_variables . AT_END

    AT_END  shift, and go to state 87
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 88
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 26

   19 class_interface_body: interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 89
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 27

   87 interface_declaration_list: interface_declaration .

    $default  reduce using rule 87 (interface_declaration_list)


state 28

   88 interface_declaration: class_method_declaration .

    $default  reduce using rule 88 (interface_declaration)


state 29

   89 interface_declaration: instance_method_declaration .

    $default  reduce using rule 89 (interface_declaration)


state 30

  129 class_implementation_definition_header: PLUS . p_type method_selector
  130                                       | PLUS . method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 91
    method_selector  go to state 92


state 31

  132 instance_implementation_definition_header: MINUS . p_type method_selector
  133                                          | MINUS . method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 93
    method_selector  go to state 94


state 32

  121 class_implementation_body: instance_variables . implementation_definition_list AT_END
  122                          | instance_variables . AT_END

    AT_END  shift, and go to state 95
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition_list             go to state 96
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 33

  116 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 116 (class_implementation)


state 34

  123 class_implementation_body: implementation_definition_list . AT_END
  124 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 97
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 35

  125 implementation_definition_list: implementation_definition .

    $default  reduce using rule 125 (implementation_definition_list)


state 36

  126 implementation_definition: class_implementation_definition .

    $default  reduce using rule 126 (implementation_definition)


state 37

  128 class_implementation_definition: class_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 100


state 38

  127 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 127 (implementation_definition)


state 39

  131 instance_implementation_definition: instance_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 101


state 40

  255 protocol_body: AT_END .

    $default  reduce using rule 255 (protocol_body)


state 41

  252 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  254              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 102
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 103
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 42

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  253 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 104
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 43

  250 protocol: protocol_header protocol_body .

    $default  reduce using rule 250 (protocol)


state 44

    9 class_interface_header: AT_INTERFACE IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 105


state 45

   11 class_interface_header: AT_INTERFACE IDENTIFIER IDENTIFIER .

    $default  reduce using rule 11 (class_interface_header)


state 46

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN .

    IDENTIFIER  shift, and go to state 106

    $default  reduce using rule 10 (class_interface_header)


state 47

  118 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 107


state 48

  119 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER IDENTIFIER .

    $default  reduce using rule 119 (class_implementation_header)


state 49

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 108


state 50

   85 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 109


state 51

   83 simple_type: NSSTRING .

    $default  reduce using rule 83 (simple_type)


state 52

   82 simple_type: FLOAT .

    $default  reduce using rule 82 (simple_type)


state 53

   81 simple_type: CHAR .

    $default  reduce using rule 81 (simple_type)


state 54

   80 simple_type: INT .

    $default  reduce using rule 80 (simple_type)


state 55

   36 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 36 (visibility_specification)


state 56

   35 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 35 (visibility_specification)


state 57

   34 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 34 (visibility_specification)


state 58

   41 variable_declaration: CONST . type IDENTIFIER SEMI_COMA
   42                     | CONST . type IDENTIFIER error
   43                     | CONST . type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST . type IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 110
    simple_type   go to state 73
    complex_type  go to state 74


state 59

   84 simple_type: VOID .

    $default  reduce using rule 84 (simple_type)


state 60

   51 structrule: STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 111


state 61

   50 Enum: TYPEDEF . ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    ENUM  shift, and go to state 112


state 62

   49 Enum: ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 113


state 63

   25 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   26                   | OPEN_S instance_variable_declarations . error
   27                   | OPEN_S instance_variable_declarations .
   28 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration

    error         shift, and go to state 114
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CLOSE_S       shift, and go to state 115

    AT_END  reduce using rule 27 (instance_variables)
    PLUS    reduce using rule 27 (instance_variables)
    MINUS   reduce using rule 27 (instance_variables)

    instance_variable_declaration  go to state 116
    visibility_specification       go to state 66


state 64

   29 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 29 (instance_variable_declarations)


state 65

   30 instance_variable_declarations: variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 30 (instance_variable_declarations)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 66

   31 instance_variable_declaration: visibility_specification . variable_declaration_list

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    variable_declaration_list  go to state 118
    variable_declaration       go to state 67
    Enum                       go to state 68
    structrule                 go to state 69
    ArrayOne                   go to state 70
    ArrayN                     go to state 71
    type                       go to state 72
    simple_type                go to state 73
    complex_type               go to state 74


state 67

   33 variable_declaration_list: variable_declaration .

    $default  reduce using rule 33 (variable_declaration_list)


state 68

   45 variable_declaration: Enum .

    $default  reduce using rule 45 (variable_declaration)


state 69

   46 variable_declaration: structrule .

    $default  reduce using rule 46 (variable_declaration)


state 70

   47 variable_declaration: ArrayOne .

    $default  reduce using rule 47 (variable_declaration)


state 71

   48 variable_declaration: ArrayN .

    $default  reduce using rule 48 (variable_declaration)


state 72

   37 variable_declaration: type . IDENTIFIER SEMI_COMA
   38                     | type . IDENTIFIER error
   39                     | type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type . IDENTIFIER EQUAL simple_expr error
   61 ArrayOne: type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type . IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type . IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type . IDENTIFIER Multi SEMI_COMA
   71       | type . IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    IDENTIFIER  shift, and go to state 119


state 73

   78 type: simple_type .

    $default  reduce using rule 78 (type)


state 74

   79 type: complex_type .

    $default  reduce using rule 79 (type)


state 75

   22 ids_list: IDENTIFIER .

    $default  reduce using rule 22 (ids_list)


state 76

   21 protocol_reference_list: LESS_THAN ids_list . MORE_THAN
   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER

    error      shift, and go to state 120
    COMMA      shift, and go to state 121
    MORE_THAN  shift, and go to state 122


state 77

   99 p_type: error . type CLOSE_P

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74


state 78

  102 method_selector: IDENTIFIER . SEMI_COLUMN @1 parameter_list
  103                | IDENTIFIER .

    SEMI_COLUMN  shift, and go to state 124

    $default  reduce using rule 103 (method_selector)


state 79

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74


state 80

   90 class_method_declaration: PLUS p_type . method_selector SEMI_COMA
   91                         | PLUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 126


state 81

   92 class_method_declaration: PLUS method_selector . SEMI_COMA
   93                         | PLUS method_selector . error

    error      shift, and go to state 127
    SEMI_COMA  shift, and go to state 128


state 82

   94 instance_method_declaration: MINUS p_type . method_selector SEMI_COMA
   96                            | MINUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 129


state 83

   95 instance_method_declaration: MINUS method_selector . SEMI_COMA
   97                            | MINUS method_selector . error

    error      shift, and go to state 130
    SEMI_COMA  shift, and go to state 131


state 84

   17 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


state 85

   13 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables . AT_END

    AT_END  shift, and go to state 132
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 133
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 86

   15 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 134
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 87

   18 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 18 (class_interface_body)


state 88

   16 class_interface_body: instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 135
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 89

   19 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


state 90

   86 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 86 (interface_declaration_list)


state 91

  129 class_implementation_definition_header: PLUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 136


state 92

  130 class_implementation_definition_header: PLUS method_selector .

    $default  reduce using rule 130 (class_implementation_definition_header)


state 93

  132 instance_implementation_definition_header: MINUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 137


state 94

  133 instance_implementation_definition_header: MINUS method_selector .

    $default  reduce using rule 133 (instance_implementation_definition_header)


state 95

  122 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 122 (class_implementation_body)


state 96

  121 class_implementation_body: instance_variables implementation_definition_list . AT_END
  124 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 138
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 97

  123 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 123 (class_implementation_body)


state 98

  124 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 124 (implementation_definition_list)


state 99

  210 block_body: OPEN_S . statement_list CLOSE_S
  211           | OPEN_S . CLOSE_S

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 141
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 140 (@2)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement_list         go to state 157
    statement              go to state 158
    @2                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    while_loop             go to state 168
    while_loop_header      go to state 169
    do_while_loop          go to state 170
    conditional_statement  go to state 171
    switch                 go to state 172
    if_header              go to state 173
    message_call           go to state 174


state 100

  128 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 128 (class_implementation_definition)


state 101

  131 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 131 (instance_implementation_definition)


state 102

  254 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 254 (protocol_body)


state 103

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  252 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 175
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 104

  253 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 253 (protocol_body)


state 105

    9 class_interface_header: AT_INTERFACE IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 9 (class_interface_header)


state 106

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 8 (class_interface_header)


state 107

  118 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 118 (class_implementation_header)


state 108

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 117 (class_implementation_header)


state 109

   85 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 85 (complex_type)


state 110

   41 variable_declaration: CONST type . IDENTIFIER SEMI_COMA
   42                     | CONST type . IDENTIFIER error
   43                     | CONST type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type . IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 176


state 111

   51 structrule: STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    OPEN_S  shift, and go to state 177


state 112

   50 Enum: TYPEDEF ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 178


state 113

   49 Enum: ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 179


state 114

   26 instance_variables: OPEN_S instance_variable_declarations error .

    $default  reduce using rule 26 (instance_variables)


state 115

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 25 (instance_variables)


state 116

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 28 (instance_variable_declarations)


state 117

   32 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 32 (variable_declaration_list)


state 118

   31 instance_variable_declaration: visibility_specification variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 31 (instance_variable_declaration)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 119

   37 variable_declaration: type IDENTIFIER . SEMI_COMA
   38                     | type IDENTIFIER . error
   39                     | type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER . EQUAL simple_expr error
   61 ArrayOne: type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER . OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type IDENTIFIER . Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER . Multi SEMI_COMA
   71       | type IDENTIFIER . Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    error      shift, and go to state 180
    SEMI_COMA  shift, and go to state 181
    EQUAL      shift, and go to state 182
    OPEN_ARR   shift, and go to state 183

    Multi  go to state 184


state 120

   23 ids_list: ids_list error . IDENTIFIER

    IDENTIFIER  shift, and go to state 185


state 121

   24 ids_list: ids_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 186


state 122

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN .

    $default  reduce using rule 21 (protocol_reference_list)


state 123

   99 p_type: error type . CLOSE_P

    CLOSE_P  shift, and go to state 187


state 124

  102 method_selector: IDENTIFIER SEMI_COLUMN . @1 parameter_list

    $default  reduce using rule 101 (@1)

    @1  go to state 188


state 125

   98 p_type: OPEN_P type . CLOSE_P
  100       | OPEN_P type . error

    error    shift, and go to state 189
    CLOSE_P  shift, and go to state 190


state 126

   90 class_method_declaration: PLUS p_type method_selector . SEMI_COMA
   91                         | PLUS p_type method_selector . error

    error      shift, and go to state 191
    SEMI_COMA  shift, and go to state 192


state 127

   93 class_method_declaration: PLUS method_selector error .

    $default  reduce using rule 93 (class_method_declaration)


state 128

   92 class_method_declaration: PLUS method_selector SEMI_COMA .

    $default  reduce using rule 92 (class_method_declaration)


state 129

   94 instance_method_declaration: MINUS p_type method_selector . SEMI_COMA
   96                            | MINUS p_type method_selector . error

    error      shift, and go to state 193
    SEMI_COMA  shift, and go to state 194


state 130

   97 instance_method_declaration: MINUS method_selector error .

    $default  reduce using rule 97 (instance_method_declaration)


state 131

   95 instance_method_declaration: MINUS method_selector SEMI_COMA .

    $default  reduce using rule 95 (instance_method_declaration)


state 132

   14 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 14 (class_interface_body)


state 133

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 195
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 134

   15 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


state 135

   16 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 16 (class_interface_body)


state 136

  129 class_implementation_definition_header: PLUS p_type method_selector .

    $default  reduce using rule 129 (class_implementation_definition_header)


state 137

  132 instance_implementation_definition_header: MINUS p_type method_selector .

    $default  reduce using rule 132 (instance_implementation_definition_header)


state 138

  121 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 121 (class_implementation_body)


state 139

  110 try_catch: TRY . block_body catch_statment

    OPEN_S  shift, and go to state 99

    block_body  go to state 196


state 140

   85 complex_type: IDENTIFIER . MULTI
  198 long_id: IDENTIFIER .

    MULTI  shift, and go to state 109

    $default  reduce using rule 198 (long_id)


state 141

  211 block_body: OPEN_S CLOSE_S .

    $default  reduce using rule 211 (block_body)


state 142

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  208 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 198
    message_call  go to state 174


state 143

  199 simple_expr: STRING_VAL .

    $default  reduce using rule 199 (simple_expr)


state 144

  201 simple_expr: FLOAT_VAL .

    $default  reduce using rule 201 (simple_expr)


state 145

  202 simple_expr: CHAR_VAL .

    $default  reduce using rule 202 (simple_expr)


state 146

  200 simple_expr: INT_VAL .

    $default  reduce using rule 200 (simple_expr)


state 147

  150 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  151                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  152                | FOR . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  153                | FOR . error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  155                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  156                | FOR . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  157                | FOR . error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  159                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  160                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  161                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  162                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  163                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    error       shift, and go to state 199
    IDENTIFIER  shift, and go to state 200
    INT         shift, and go to state 201
    SEMI_COMA   shift, and go to state 202
    OPEN_P      shift, and go to state 203

    for_initializer  go to state 204


state 148

  213 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P
  214                  | WHILE . OPEN_P logic_expr error
  215                  | WHILE . logic_expr CLOSE_P
  216                  | WHILE . error logic_expr CLOSE_P

    error       shift, and go to state 205
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 207
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 209
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 149

  234 if_header: IF . OPEN_P logic_expr CLOSE_P
  235          | IF . OPEN_P logic_expr error
  236          | IF . logic_expr CLOSE_P
  237          | IF . error logic_expr CLOSE_P

    error       shift, and go to state 211
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 212
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 213
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 150

  238 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 214
    OPEN_ARR    shift, and go to state 150

    message_call  go to state 215
    sender        go to state 216


state 151

  144 return_statement: RETURN . expr SEMI_COMA
  145                 | RETURN . expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 217
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 152

  217 do_while_loop: DO . statement while_loop_header SEMI_COMA

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 140 (@2)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 218
    @2                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    while_loop             go to state 168
    while_loop_header      go to state 169
    do_while_loop          go to state 170
    conditional_statement  go to state 171
    switch                 go to state 172
    if_header              go to state 173
    message_call           go to state 174


state 153

  221 switch: SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  222       | SWITCH . error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  223       | SWITCH . OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  224       | SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  225       | SWITCH . OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

    error   shift, and go to state 219
    OPEN_P  shift, and go to state 220


state 154

  139 statement: variable_declaration .

    $default  reduce using rule 139 (statement)


state 155

  209 simple_expr: p_type . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 221
    message_call  go to state 174


state 156

  143 statement: try_catch .

    $default  reduce using rule 143 (statement)


state 157

  134 statement_list: statement_list . statement
  210 block_body: OPEN_S statement_list . CLOSE_S

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 222
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 140 (@2)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 223
    @2                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    while_loop             go to state 168
    while_loop_header      go to state 169
    do_while_loop          go to state 170
    conditional_statement  go to state 171
    switch                 go to state 172
    if_header              go to state 173
    message_call           go to state 174


state 158

  135 statement_list: statement .

    $default  reduce using rule 135 (statement_list)


state 159

  141 statement: @2 . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 224


state 160

  142 statement: return_statement .

    $default  reduce using rule 142 (statement)


state 161

  136 statement: loop_statement .

    $default  reduce using rule 136 (statement)


state 162

  146 loop_statement: for_loop .

    $default  reduce using rule 146 (loop_statement)


state 163

  149 for_loop: for_loop_header . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 140 (@2)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 225
    @2                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    while_loop             go to state 168
    while_loop_header      go to state 169
    do_while_loop          go to state 170
    conditional_statement  go to state 171
    switch                 go to state 172
    if_header              go to state 173
    message_call           go to state 174


state 164

  138 statement: expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 226


state 165

  180 expr: assign_expr .

    $default  reduce using rule 180 (expr)


state 166

  195 assign_expr: long_id . EQUAL simple_expr
  196 long_id: long_id . DOT IDENTIFIER
  203 simple_expr: long_id .

    EQUAL  shift, and go to state 227
    DOT    shift, and go to state 228

    $default  reduce using rule 203 (simple_expr)


state 167

  181 expr: simple_expr .
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 229
    MINUS  shift, and go to state 230
    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 181 (expr)


state 168

  147 loop_statement: while_loop .

    $default  reduce using rule 147 (loop_statement)


state 169

  212 while_loop: while_loop_header . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 140 (@2)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 233
    @2                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    while_loop             go to state 168
    while_loop_header      go to state 169
    do_while_loop          go to state 170
    conditional_statement  go to state 171
    switch                 go to state 172
    if_header              go to state 173
    message_call           go to state 174


state 170

  148 loop_statement: do_while_loop .

    $default  reduce using rule 148 (loop_statement)


state 171

  137 statement: conditional_statement .

    $default  reduce using rule 137 (statement)


state 172

  220 conditional_statement: switch .

    $default  reduce using rule 220 (conditional_statement)


state 173

  218 conditional_statement: if_header . statement
  219                      | if_header . statement ELSE statement

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 140 (@2)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 234
    @2                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    while_loop             go to state 168
    while_loop_header      go to state 169
    do_while_loop          go to state 170
    conditional_statement  go to state 171
    switch                 go to state 172
    if_header              go to state 173
    message_call           go to state 174


state 174

  197 long_id: message_call .

    $default  reduce using rule 197 (long_id)


state 175

  252 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 252 (protocol_body)


state 176

   41 variable_declaration: CONST type IDENTIFIER . SEMI_COMA
   42                     | CONST type IDENTIFIER . error
   43                     | CONST type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER . EQUAL simple_expr error

    error      shift, and go to state 235
    SEMI_COMA  shift, and go to state 236
    EQUAL      shift, and go to state 237


state 177

   51 structrule: STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 238
    VOID        shift, and go to state 59

    variable_declarations  go to state 239
    type                   go to state 240
    simple_type            go to state 73
    complex_type           go to state 74


state 178

   50 Enum: TYPEDEF ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 241


state 179

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   49 Enum: ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 242
    COMMA    shift, and go to state 121


state 180

   38 variable_declaration: type IDENTIFIER error .

    $default  reduce using rule 38 (variable_declaration)


state 181

   37 variable_declaration: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 37 (variable_declaration)


state 182

   39 variable_declaration: type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 243
    message_call  go to state 174


state 183

   61 ArrayOne: type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR . INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    INT_VAL    shift, and go to state 244
    CLOSE_ARR  shift, and go to state 245


state 184

   69 ArrayN: type IDENTIFIER Multi . EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi . SEMI_COMA
   71       | type IDENTIFIER Multi . EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA
   73 Multi: Multi . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 246
    EQUAL      shift, and go to state 247
    OPEN_ARR   shift, and go to state 248


state 185

   23 ids_list: ids_list error IDENTIFIER .

    $default  reduce using rule 23 (ids_list)


state 186

   24 ids_list: ids_list COMMA IDENTIFIER .

    $default  reduce using rule 24 (ids_list)


state 187

   99 p_type: error type CLOSE_P .

    $default  reduce using rule 99 (p_type)


state 188

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 . parameter_list

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type          go to state 249
    parameter_list  go to state 250
    parameter       go to state 251


state 189

  100 p_type: OPEN_P type error .

    $default  reduce using rule 100 (p_type)


state 190

   98 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 98 (p_type)


state 191

   91 class_method_declaration: PLUS p_type method_selector error .

    $default  reduce using rule 91 (class_method_declaration)


state 192

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 90 (class_method_declaration)


state 193

   96 instance_method_declaration: MINUS p_type method_selector error .

    $default  reduce using rule 96 (instance_method_declaration)


state 194

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 94 (instance_method_declaration)


state 195

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 13 (class_interface_body)


state 196

  110 try_catch: TRY block_body . catch_statment

    CATCH    shift, and go to state 252
    FINALLY  shift, and go to state 253

    catch_statment  go to state 254


state 197

  196 long_id: long_id . DOT IDENTIFIER
  203 simple_expr: long_id .

    DOT  shift, and go to state 228

    $default  reduce using rule 203 (simple_expr)


state 198

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  208            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 229
    MINUS    shift, and go to state 230
    CLOSE_P  shift, and go to state 255
    MULTI    shift, and go to state 231
    DIV      shift, and go to state 232


state 199

  153 for_loop_header: FOR error . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  157                | FOR error . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    IDENTIFIER  shift, and go to state 200
    INT         shift, and go to state 201
    SEMI_COMA   shift, and go to state 256

    for_initializer  go to state 257


state 200

  167 for_initializer: IDENTIFIER . EQUAL expr
  168                | IDENTIFIER . expr
  169                | IDENTIFIER . error expr
  170                | IDENTIFIER .

    error       shift, and go to state 258
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    EQUAL       shift, and go to state 259
    OPEN_ARR    shift, and go to state 150

    SEMI_COMA  reduce using rule 170 (for_initializer)

    p_type        go to state 155
    expr          go to state 260
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 201

  164 for_initializer: INT . IDENTIFIER EQUAL expr
  165                | INT . IDENTIFIER expr
  166                | INT . IDENTIFIER error expr

    IDENTIFIER  shift, and go to state 261


state 202

  156 for_loop_header: FOR SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 263
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 203

  150 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  151                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  154                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  155                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr error
  158                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  159                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  160                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  161                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  162                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  163                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P

    IDENTIFIER  shift, and go to state 200
    INT         shift, and go to state 201
    SEMI_COMA   shift, and go to state 264

    for_initializer  go to state 265


state 204

  152 for_loop_header: FOR for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 266


state 205

   99 p_type: error . type CLOSE_P
  216 while_loop_header: WHILE error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 267
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 206

  198 long_id: IDENTIFIER .

    $default  reduce using rule 198 (long_id)


state 207

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  177 logic_expr: OPEN_P . logic_expr CLOSE_P
  208 simple_expr: OPEN_P . simple_expr CLOSE_P
  213 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P
  214                  | WHILE OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 268
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 269
    message_call  go to state 174


state 208

  176 logic_expr: NOT_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 270
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 209

  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr
  215 while_loop_header: WHILE logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 271
    AND_AND  shift, and go to state 272
    OR_OR    shift, and go to state 273


state 210

  171 logic_expr: expr . LESS_THAN expr
  172           | expr . MORE_THAN expr
  173           | expr . LESS_OR_EQUAL expr
  174           | expr . MORE_OR_EQUAL expr
  175           | expr . EQUAL_EQUAL expr

    LESS_THAN      shift, and go to state 274
    MORE_THAN      shift, and go to state 275
    LESS_OR_EQUAL  shift, and go to state 276
    MORE_OR_EQUAL  shift, and go to state 277
    EQUAL_EQUAL    shift, and go to state 278


state 211

   99 p_type: error . type CLOSE_P
  237 if_header: IF error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 279
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 212

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  177 logic_expr: OPEN_P . logic_expr CLOSE_P
  208 simple_expr: OPEN_P . simple_expr CLOSE_P
  234 if_header: IF OPEN_P . logic_expr CLOSE_P
  235          | IF OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 280
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 269
    message_call  go to state 174


state 213

  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr
  236 if_header: IF logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 281
    AND_AND  shift, and go to state 272
    OR_OR    shift, and go to state 273


state 214

  240 sender: IDENTIFIER .

    $default  reduce using rule 240 (sender)


state 215

  239 sender: message_call .

    $default  reduce using rule 239 (sender)


state 216

  238 message_call: OPEN_ARR sender . message CLOSE_ARR

    IDENTIFIER  shift, and go to state 282

    message  go to state 283


state 217

  144 return_statement: RETURN expr . SEMI_COMA
  145                 | RETURN expr . error

    error      shift, and go to state 284
    SEMI_COMA  shift, and go to state 285


state 218

  217 do_while_loop: DO statement . while_loop_header SEMI_COMA

    WHILE  shift, and go to state 148

    while_loop_header  go to state 286


state 219

  222 switch: SWITCH error . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type            go to state 155
    logic_expr        go to state 287
    expr              go to state 288
    assign_expr       go to state 165
    long_id           go to state 166
    simple_expr       go to state 167
    switch_statement  go to state 289
    message_call      go to state 174


state 220

  221 switch: SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  223       | SWITCH OPEN_P . switch_statement error OPEN_S switch_body CLOSE_S
  224       | SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body error
  225       | SWITCH OPEN_P . switch_statement CLOSE_P error switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type            go to state 155
    logic_expr        go to state 287
    expr              go to state 288
    assign_expr       go to state 165
    long_id           go to state 166
    simple_expr       go to state 167
    switch_statement  go to state 290
    message_call      go to state 174


state 221

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  209            | p_type simple_expr .

    PLUS   shift, and go to state 229
    MINUS  shift, and go to state 230
    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 209 (simple_expr)


state 222

  210 block_body: OPEN_S statement_list CLOSE_S .

    $default  reduce using rule 210 (block_body)


state 223

  134 statement_list: statement_list statement .

    $default  reduce using rule 134 (statement_list)


state 224

  141 statement: @2 block_body .

    $default  reduce using rule 141 (statement)


state 225

  149 for_loop: for_loop_header statement .

    $default  reduce using rule 149 (for_loop)


state 226

  138 statement: expr SEMI_COMA .

    $default  reduce using rule 138 (statement)


state 227

  195 assign_expr: long_id EQUAL . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 291
    message_call  go to state 174


state 228

  196 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 292


state 229

  204 simple_expr: simple_expr PLUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 293
    message_call  go to state 174


state 230

  205 simple_expr: simple_expr MINUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 294
    message_call  go to state 174


state 231

  206 simple_expr: simple_expr MULTI . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 295
    message_call  go to state 174


state 232

  207 simple_expr: simple_expr DIV . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 296
    message_call  go to state 174


state 233

  212 while_loop: while_loop_header statement .

    $default  reduce using rule 212 (while_loop)


state 234

  218 conditional_statement: if_header statement .
  219                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 297

    $default  reduce using rule 218 (conditional_statement)


state 235

   42 variable_declaration: CONST type IDENTIFIER error .

    $default  reduce using rule 42 (variable_declaration)


state 236

   41 variable_declaration: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 41 (variable_declaration)


state 237

   43 variable_declaration: CONST type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 298
    message_call  go to state 174


state 238

   58 variable_declarations: CONST . type IDENTIFIER SEMI_COMA
   60                      | CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 299
    simple_type   go to state 73
    complex_type  go to state 74


state 239

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S ids_list SEMI_COMA
   54 variable_declarations: variable_declarations . type IDENTIFIER SEMI_COMA
   56                      | variable_declarations . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations . CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations . CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 300
    CONST       shift, and go to state 301
    VOID        shift, and go to state 59

    type          go to state 302
    simple_type   go to state 73
    complex_type  go to state 74


state 240

   53 variable_declarations: type . IDENTIFIER SEMI_COMA
   55                      | type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 303


state 241

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   50 Enum: TYPEDEF ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 304
    COMMA    shift, and go to state 121


state 242

   49 Enum: ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 305


state 243

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr . error
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    error      shift, and go to state 306
    SEMI_COMA  shift, and go to state 307
    PLUS       shift, and go to state 229
    MINUS      shift, and go to state 230
    MULTI      shift, and go to state 231
    DIV        shift, and go to state 232


state 244

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL . CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    CLOSE_ARR  shift, and go to state 308


state 245

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

    EQUAL  shift, and go to state 309


state 246

   70 ArrayN: type IDENTIFIER Multi SEMI_COMA .

    $default  reduce using rule 70 (ArrayN)


state 247

   69 ArrayN: type IDENTIFIER Multi EQUAL . OPEN_S CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL . OPEN_S array_body2 CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 310


state 248

   73 Multi: Multi OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 311


state 249

  109 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 312


state 250

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 parameter_list .
  104 parameter_list: parameter_list . SEMI_COLUMN parameter
  105               | parameter_list . IDENTIFIER SEMI_COLUMN parameter
  106               | parameter_list . IDENTIFIER error parameter
  107               | parameter_list . IDENTIFIER parameter

    IDENTIFIER   shift, and go to state 313
    SEMI_COLUMN  shift, and go to state 314

    $default  reduce using rule 102 (method_selector)


state 251

  108 parameter_list: parameter .

    $default  reduce using rule 108 (parameter_list)


state 252

  111 catch_statment: CATCH . OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment

    OPEN_P  shift, and go to state 315


state 253

  112 catch_statment: FINALLY . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 316


state 254

  110 try_catch: TRY block_body catch_statment .

    $default  reduce using rule 110 (try_catch)


state 255

  208 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 208 (simple_expr)


state 256

  157 for_loop_header: FOR error SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 317
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 257

  153 for_loop_header: FOR error for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 318


state 258

   99 p_type: error . type CLOSE_P
  169 for_initializer: IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    expr          go to state 319
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 259

  167 for_initializer: IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 320
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 260

  168 for_initializer: IDENTIFIER expr .

    $default  reduce using rule 168 (for_initializer)


state 261

  164 for_initializer: INT IDENTIFIER . EQUAL expr
  165                | INT IDENTIFIER . expr
  166                | INT IDENTIFIER . error expr

    error       shift, and go to state 321
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    EQUAL       shift, and go to state 322
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 323
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 262

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  177 logic_expr: OPEN_P . logic_expr CLOSE_P
  208 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 324
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 269
    message_call  go to state 174


state 263

  156 for_loop_header: FOR SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 325
    AND_AND    shift, and go to state 272
    OR_OR      shift, and go to state 273


state 264

  154 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  155                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr error
  161                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  162                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  163                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    SEMI_COMA   shift, and go to state 326
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 327
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 265

  150 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  151                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr error
  158                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  159                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  160                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 328


state 266

  152 for_loop_header: FOR for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 329
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 267

  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr
  216 while_loop_header: WHILE error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 330
    AND_AND  shift, and go to state 272
    OR_OR    shift, and go to state 273


state 268

  177 logic_expr: OPEN_P logic_expr . CLOSE_P
  178           | logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr
  213 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P
  214                  | WHILE OPEN_P logic_expr . error

    error    shift, and go to state 331
    CLOSE_P  shift, and go to state 332
    AND_AND  shift, and go to state 272
    OR_OR    shift, and go to state 273


state 269

  181 expr: simple_expr .
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  208            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 229
    MINUS    shift, and go to state 230
    CLOSE_P  shift, and go to state 255
    MULTI    shift, and go to state 231
    DIV      shift, and go to state 232

    $default  reduce using rule 181 (expr)


state 270

  176 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 176 (logic_expr)


state 271

  215 while_loop_header: WHILE logic_expr CLOSE_P .

    $default  reduce using rule 215 (while_loop_header)


state 272

  178 logic_expr: logic_expr AND_AND . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 333
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 273

  179 logic_expr: logic_expr OR_OR . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 334
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 274

  171 logic_expr: expr LESS_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 335
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 275

  172 logic_expr: expr MORE_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 336
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 276

  173 logic_expr: expr LESS_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 337
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 277

  174 logic_expr: expr MORE_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 338
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 278

  175 logic_expr: expr EQUAL_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 339
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 279

  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr
  237 if_header: IF error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 340
    AND_AND  shift, and go to state 272
    OR_OR    shift, and go to state 273


state 280

  177 logic_expr: OPEN_P logic_expr . CLOSE_P
  178           | logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr
  234 if_header: IF OPEN_P logic_expr . CLOSE_P
  235          | IF OPEN_P logic_expr . error

    error    shift, and go to state 341
    CLOSE_P  shift, and go to state 342
    AND_AND  shift, and go to state 272
    OR_OR    shift, and go to state 273


state 281

  236 if_header: IF logic_expr CLOSE_P .

    $default  reduce using rule 236 (if_header)


state 282

  241 message: IDENTIFIER .
  242        | IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 343

    $default  reduce using rule 241 (message)


state 283

  238 message_call: OPEN_ARR sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 344


state 284

  145 return_statement: RETURN expr error .

    $default  reduce using rule 145 (return_statement)


state 285

  144 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 144 (return_statement)


state 286

  217 do_while_loop: DO statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 345


state 287

  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr
  230 switch_statement: logic_expr .

    AND_AND  shift, and go to state 272
    OR_OR    shift, and go to state 273

    $default  reduce using rule 230 (switch_statement)


state 288

  171 logic_expr: expr . LESS_THAN expr
  172           | expr . MORE_THAN expr
  173           | expr . LESS_OR_EQUAL expr
  174           | expr . MORE_OR_EQUAL expr
  175           | expr . EQUAL_EQUAL expr
  231 switch_statement: expr .

    LESS_THAN      shift, and go to state 274
    MORE_THAN      shift, and go to state 275
    LESS_OR_EQUAL  shift, and go to state 276
    MORE_OR_EQUAL  shift, and go to state 277
    EQUAL_EQUAL    shift, and go to state 278

    $default  reduce using rule 231 (switch_statement)


state 289

  222 switch: SWITCH error switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S

    CLOSE_P  shift, and go to state 346


state 290

  221 switch: SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S
  223       | SWITCH OPEN_P switch_statement . error OPEN_S switch_body CLOSE_S
  224       | SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body error
  225       | SWITCH OPEN_P switch_statement . CLOSE_P error switch_body CLOSE_S

    error    shift, and go to state 347
    CLOSE_P  shift, and go to state 348


state 291

  195 assign_expr: long_id EQUAL simple_expr .
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 229
    MINUS  shift, and go to state 230
    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 195 (assign_expr)


state 292

  196 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 196 (long_id)


state 293

  204 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr PLUS simple_expr .
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 204 (simple_expr)


state 294

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  205            | simple_expr MINUS simple_expr .
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 205 (simple_expr)


state 295

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  206            | simple_expr MULTI simple_expr .
  207            | simple_expr . DIV simple_expr

    $default  reduce using rule 206 (simple_expr)


state 296

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  207            | simple_expr DIV simple_expr .

    $default  reduce using rule 207 (simple_expr)


state 297

  219 conditional_statement: if_header statement ELSE . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 140 (@2)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 349
    @2                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    while_loop             go to state 168
    while_loop_header      go to state 169
    do_while_loop          go to state 170
    conditional_statement  go to state 171
    switch                 go to state 172
    if_header              go to state 173
    message_call           go to state 174


state 298

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr . error
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    error      shift, and go to state 350
    SEMI_COMA  shift, and go to state 351
    PLUS       shift, and go to state 229
    MINUS      shift, and go to state 230
    MULTI      shift, and go to state 231
    DIV        shift, and go to state 232


state 299

   58 variable_declarations: CONST type . IDENTIFIER SEMI_COMA
   60                      | CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 352


state 300

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 75
    SEMI_COMA   shift, and go to state 353

    ids_list  go to state 354


state 301

   57 variable_declarations: variable_declarations CONST . type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 355
    simple_type   go to state 73
    complex_type  go to state 74


state 302

   54 variable_declarations: variable_declarations type . IDENTIFIER SEMI_COMA
   56                      | variable_declarations type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 356


state 303

   53 variable_declarations: type IDENTIFIER . SEMI_COMA
   55                      | type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 357
    SEMI_COMA    shift, and go to state 358


state 304

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 359


state 305

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 360


state 306

   40 variable_declaration: type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 40 (variable_declaration)


state 307

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 39 (variable_declaration)


state 308

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 361
    EQUAL      shift, and go to state 362
    OPEN_ARR   shift, and go to state 363


state 309

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 364


state 310

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S . CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S . array_body2 CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_S      shift, and go to state 365
    CLOSE_S     shift, and go to state 366
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    array_body2   go to state 367
    p_type        go to state 155
    expr          go to state 368
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 311

   73 Multi: Multi OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 369


state 312

  109 parameter: p_type IDENTIFIER .

    $default  reduce using rule 109 (parameter)


state 313

  105 parameter_list: parameter_list IDENTIFIER . SEMI_COLUMN parameter
  106               | parameter_list IDENTIFIER . error parameter
  107               | parameter_list IDENTIFIER . parameter

    error        shift, and go to state 370
    SEMI_COLUMN  shift, and go to state 371
    OPEN_P       shift, and go to state 79

    p_type     go to state 249
    parameter  go to state 372


state 314

  104 parameter_list: parameter_list SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 249
    parameter  go to state 373


state 315

  111 catch_statment: CATCH OPEN_P . NSEXception Exception_type CLOSE_P block_body catch_statment

    NSEXception  shift, and go to state 374


state 316

  112 catch_statment: FINALLY block_body .

    $default  reduce using rule 112 (catch_statment)


state 317

  157 for_loop_header: FOR error SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 375
    AND_AND    shift, and go to state 272
    OR_OR      shift, and go to state 273


state 318

  153 for_loop_header: FOR error for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 376
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 319

  169 for_initializer: IDENTIFIER error expr .

    $default  reduce using rule 169 (for_initializer)


state 320

  167 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 167 (for_initializer)


state 321

   99 p_type: error . type CLOSE_P
  166 for_initializer: INT IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    expr          go to state 377
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 322

  164 for_initializer: INT IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 378
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 323

  165 for_initializer: INT IDENTIFIER expr .

    $default  reduce using rule 165 (for_initializer)


state 324

  177 logic_expr: OPEN_P logic_expr . CLOSE_P
  178           | logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 379
    AND_AND  shift, and go to state 272
    OR_OR    shift, and go to state 273


state 325

  156 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 380
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 326

  162 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  163                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    CLOSE_P     shift, and go to state 381
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 382
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 327

  154 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  155                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr error
  161                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 383
    AND_AND    shift, and go to state 272
    OR_OR      shift, and go to state 273


state 328

  150 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  151                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr error
  158                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  159                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  160                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    SEMI_COMA   shift, and go to state 384
    OPEN_P      shift, and go to state 262
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 208
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 385
    expr          go to state 210
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 329

  152 for_loop_header: FOR for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 386
    AND_AND    shift, and go to state 272
    OR_OR      shift, and go to state 273


state 330

  216 while_loop_header: WHILE error logic_expr CLOSE_P .

    $default  reduce using rule 216 (while_loop_header)


state 331

  214 while_loop_header: WHILE OPEN_P logic_expr error .

    $default  reduce using rule 214 (while_loop_header)


state 332

  177 logic_expr: OPEN_P logic_expr CLOSE_P .
  213 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 177 (logic_expr)
    AND_AND   reduce using rule 177 (logic_expr)
    OR_OR     reduce using rule 177 (logic_expr)
    $default  reduce using rule 213 (while_loop_header)


state 333

  178 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr AND_AND logic_expr .
  179           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 178 (logic_expr)


state 334

  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr
  179           | logic_expr OR_OR logic_expr .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 179 (logic_expr)


state 335

  171 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 171 (logic_expr)


state 336

  172 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 172 (logic_expr)


state 337

  173 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 173 (logic_expr)


state 338

  174 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 174 (logic_expr)


state 339

  175 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 175 (logic_expr)


state 340

  237 if_header: IF error logic_expr CLOSE_P .

    $default  reduce using rule 237 (if_header)


state 341

  235 if_header: IF OPEN_P logic_expr error .

    $default  reduce using rule 235 (if_header)


state 342

  177 logic_expr: OPEN_P logic_expr CLOSE_P .
  234 if_header: IF OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 177 (logic_expr)
    AND_AND   reduce using rule 177 (logic_expr)
    OR_OR     reduce using rule 177 (logic_expr)
    $default  reduce using rule 234 (if_header)


state 343

  242 message: IDENTIFIER SEMI_COLUMN . argument_list

    error        shift, and go to state 387
    IDENTIFIER   shift, and go to state 388
    SEMI_COLUMN  shift, and go to state 389

    argument_list  go to state 390
    argument       go to state 391


state 344

  238 message_call: OPEN_ARR sender message CLOSE_ARR .

    $default  reduce using rule 238 (message_call)


state 345

  217 do_while_loop: DO statement while_loop_header SEMI_COMA .

    $default  reduce using rule 217 (do_while_loop)


state 346

  222 switch: SWITCH error switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 392


state 347

  223 switch: SWITCH OPEN_P switch_statement error . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 393


state 348

  221 switch: SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S
  224       | SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body error
  225       | SWITCH OPEN_P switch_statement CLOSE_P . error switch_body CLOSE_S

    error   shift, and go to state 394
    OPEN_S  shift, and go to state 395


state 349

  219 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 219 (conditional_statement)


state 350

   44 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 44 (variable_declaration)


state 351

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 43 (variable_declaration)


state 352

   58 variable_declarations: CONST type IDENTIFIER . SEMI_COMA
   60                      | CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 396
    SEMI_COMA    shift, and go to state 397


state 353

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA .

    $default  reduce using rule 51 (structrule)


state 354

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list . SEMI_COMA

    error      shift, and go to state 120
    SEMI_COMA  shift, and go to state 398
    COMMA      shift, and go to state 121


state 355

   57 variable_declarations: variable_declarations CONST type . IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 399


state 356

   54 variable_declarations: variable_declarations type IDENTIFIER . SEMI_COMA
   56                      | variable_declarations type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 400
    SEMI_COMA    shift, and go to state 401


state 357

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 402
    message_call  go to state 174


state 358

   53 variable_declarations: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 53 (variable_declarations)


state 359

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 403


state 360

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 49 (Enum)


state 361

   62 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA .

    $default  reduce using rule 62 (ArrayOne)


state 362

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 404


state 363

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 405


state 364

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 406

    array_body    go to state 407
    p_type        go to state 155
    expr          go to state 408
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 365

   74 array_body2: OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 406

    array_body    go to state 409
    p_type        go to state 155
    expr          go to state 408
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 366

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 410


state 367

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 . CLOSE_S SEMI_COMA
   76 array_body2: array_body2 . COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 . COMMA expr

    CLOSE_S  shift, and go to state 411
    COMMA    shift, and go to state 412


state 368

   75 array_body2: expr .

    $default  reduce using rule 75 (array_body2)


state 369

   73 Multi: Multi OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 73 (Multi)


state 370

   99 p_type: error . type CLOSE_P
  106 parameter_list: parameter_list IDENTIFIER error . parameter

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 79

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 249
    parameter     go to state 413


state 371

  105 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 249
    parameter  go to state 414


state 372

  107 parameter_list: parameter_list IDENTIFIER parameter .

    $default  reduce using rule 107 (parameter_list)


state 373

  104 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 104 (parameter_list)


state 374

  111 catch_statment: CATCH OPEN_P NSEXception . Exception_type CLOSE_P block_body catch_statment

    NUllPointerException   shift, and go to state 415
    OUtOfBoundryException  shift, and go to state 416
    CAstException          shift, and go to state 417

    Exception_type  go to state 418


state 375

  157 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 419
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 376

  153 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 420
    AND_AND    shift, and go to state 272
    OR_OR      shift, and go to state 273


state 377

  166 for_initializer: INT IDENTIFIER error expr .

    $default  reduce using rule 166 (for_initializer)


state 378

  164 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 164 (for_initializer)


state 379

  177 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 177 (logic_expr)


state 380

  156 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 421


state 381

  163 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 163 (for_loop_header)


state 382

  162 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 422


state 383

  154 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  155                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr error
  161                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    CLOSE_P     shift, and go to state 423
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 424
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 384

  158 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  160                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    CLOSE_P     shift, and go to state 425
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 426
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 385

  150 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  151                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr error
  159                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  178 logic_expr: logic_expr . AND_AND logic_expr
  179           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 427
    AND_AND    shift, and go to state 272
    OR_OR      shift, and go to state 273


state 386

  152 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 428
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 387

  246 argument: error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 429
    message_call  go to state 174


state 388

  247 argument: IDENTIFIER . SEMI_COLUMN simple_expr
  248         | IDENTIFIER . simple_expr
  249         | IDENTIFIER . error simple_expr

    error        shift, and go to state 430
    IDENTIFIER   shift, and go to state 206
    SEMI_COLUMN  shift, and go to state 431
    OPEN_P       shift, and go to state 142
    STRING_VAL   shift, and go to state 143
    FLOAT_VAL    shift, and go to state 144
    CHAR_VAL     shift, and go to state 145
    INT_VAL      shift, and go to state 146
    OPEN_ARR     shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 432
    message_call  go to state 174


state 389

  245 argument: SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 433
    message_call  go to state 174


state 390

  242 message: IDENTIFIER SEMI_COLUMN argument_list .
  243 argument_list: argument_list . argument

    error        shift, and go to state 387
    IDENTIFIER   shift, and go to state 388
    SEMI_COLUMN  shift, and go to state 389

    CLOSE_ARR  reduce using rule 242 (message)

    argument  go to state 434


state 391

  244 argument_list: argument .

    $default  reduce using rule 244 (argument_list)


state 392

  222 switch: SWITCH error switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 435
    CASE     shift, and go to state 436

    switch_body  go to state 437


state 393

  223 switch: SWITCH OPEN_P switch_statement error OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 435
    CASE     shift, and go to state 436

    switch_body  go to state 438


state 394

  225 switch: SWITCH OPEN_P switch_statement CLOSE_P error . switch_body CLOSE_S

    DEFAULT  shift, and go to state 435
    CASE     shift, and go to state 436

    switch_body  go to state 439


state 395

  221 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S
  224       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body error

    DEFAULT  shift, and go to state 435
    CASE     shift, and go to state 436

    switch_body  go to state 440


state 396

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 441
    message_call  go to state 174


state 397

   58 variable_declarations: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 58 (variable_declarations)


state 398

   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA .

    $default  reduce using rule 52 (structrule)


state 399

   57 variable_declarations: variable_declarations CONST type IDENTIFIER . SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 442
    SEMI_COMA    shift, and go to state 443


state 400

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 444
    message_call  go to state 174


state 401

   54 variable_declarations: variable_declarations type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 54 (variable_declarations)


state 402

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 445
    PLUS       shift, and go to state 229
    MINUS      shift, and go to state 230
    MULTI      shift, and go to state 231
    DIV        shift, and go to state 232


state 403

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 50 (Enum)


state 404

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    CLOSE_S     shift, and go to state 446
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 406

    array_body    go to state 447
    p_type        go to state 155
    expr          go to state 408
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 405

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 448


state 406

   68 array_body: OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  238 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 214
    INT_VAL     shift, and go to state 449
    OPEN_ARR    shift, and go to state 150

    message_call  go to state 215
    sender        go to state 216


state 407

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 450
    COMMA    shift, and go to state 451


state 408

   66 array_body: expr .

    $default  reduce using rule 66 (array_body)


state 409

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   74 array_body2: OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 452
    COMMA    shift, and go to state 451


state 410

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 69 (ArrayN)


state 411

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 453


state 412

   76 array_body2: array_body2 COMMA . OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_S      shift, and go to state 454
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 455
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 413

  106 parameter_list: parameter_list IDENTIFIER error parameter .

    $default  reduce using rule 106 (parameter_list)


state 414

  105 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN parameter .

    $default  reduce using rule 105 (parameter_list)


state 415

  113 Exception_type: NUllPointerException .

    $default  reduce using rule 113 (Exception_type)


state 416

  114 Exception_type: OUtOfBoundryException .

    $default  reduce using rule 114 (Exception_type)


state 417

  115 Exception_type: CAstException .

    $default  reduce using rule 115 (Exception_type)


state 418

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type . CLOSE_P block_body catch_statment

    CLOSE_P  shift, and go to state 456


state 419

  157 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 457


state 420

  153 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 458
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 421

  156 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 156 (for_loop_header)


state 422

  162 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 162 (for_loop_header)


state 423

  161 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 161 (for_loop_header)


state 424

  154 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  155                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 459
    CLOSE_P  shift, and go to state 460


state 425

  160 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 160 (for_loop_header)


state 426

  158 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 461


state 427

  150 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  151                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr error
  159                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    CLOSE_P     shift, and go to state 462
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 463
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 428

  152 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 464


state 429

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  246 argument: error simple_expr .

    PLUS   shift, and go to state 229
    MINUS  shift, and go to state 230
    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 246 (argument)


state 430

   99 p_type: error . type CLOSE_P
  249 argument: IDENTIFIER error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 465
    message_call  go to state 174


state 431

  247 argument: IDENTIFIER SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 466
    message_call  go to state 174


state 432

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  248 argument: IDENTIFIER simple_expr .

    PLUS   shift, and go to state 229
    MINUS  shift, and go to state 230
    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 248 (argument)


state 433

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  245 argument: SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 229
    MINUS  shift, and go to state 230
    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 245 (argument)


state 434

  243 argument_list: argument_list argument .

    $default  reduce using rule 243 (argument_list)


state 435

  228 switch_body: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  229            | DEFAULT . SEMI_COLUMN statement error SEMI_COMA

    SEMI_COLUMN  shift, and go to state 467


state 436

  226 switch_body: CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  227            | CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    OPEN_P  shift, and go to state 468


state 437

  222 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 469


state 438

  223 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 470


state 439

  225 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 471


state 440

  221 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S
  224       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . error

    error    shift, and go to state 472
    CLOSE_S  shift, and go to state 473


state 441

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 474
    PLUS       shift, and go to state 229
    MINUS      shift, and go to state 230
    MULTI      shift, and go to state 231
    DIV        shift, and go to state 232


state 442

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 197
    simple_expr   go to state 475
    message_call  go to state 174


state 443

   57 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 57 (variable_declarations)


state 444

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 476
    PLUS       shift, and go to state 229
    MINUS      shift, and go to state 230
    MULTI      shift, and go to state 231
    DIV        shift, and go to state 232


state 445

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 55 (variable_declarations)


state 446

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 477


state 447

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 478
    COMMA    shift, and go to state 451


state 448

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 72 (Multi)


state 449

   68 array_body: OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 479


state 450

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 480


state 451

   65 array_body: array_body COMMA . expr
   67           | array_body COMMA . OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 481

    p_type        go to state 155
    expr          go to state 482
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 452

   74 array_body2: OPEN_S array_body CLOSE_S .

    $default  reduce using rule 74 (array_body2)


state 453

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA .

    $default  reduce using rule 71 (ArrayN)


state 454

   76 array_body2: array_body2 COMMA OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 406

    array_body    go to state 483
    p_type        go to state 155
    expr          go to state 408
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 455

   77 array_body2: array_body2 COMMA expr .

    $default  reduce using rule 77 (array_body2)


state 456

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P . block_body catch_statment

    OPEN_S  shift, and go to state 99

    block_body  go to state 484


state 457

  157 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 157 (for_loop_header)


state 458

  153 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 485


state 459

  155 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 155 (for_loop_header)


state 460

  154 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 154 (for_loop_header)


state 461

  158 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 158 (for_loop_header)


state 462

  159 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 159 (for_loop_header)


state 463

  150 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  151                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 486
    CLOSE_P  shift, and go to state 487


state 464

  152 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 152 (for_loop_header)


state 465

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  249 argument: IDENTIFIER error simple_expr .

    PLUS   shift, and go to state 229
    MINUS  shift, and go to state 230
    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 249 (argument)


state 466

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  247 argument: IDENTIFIER SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 229
    MINUS  shift, and go to state 230
    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 247 (argument)


state 467

  228 switch_body: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  229            | DEFAULT SEMI_COLUMN . statement error SEMI_COMA

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 140 (@2)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 488
    @2                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    while_loop             go to state 168
    while_loop_header      go to state 169
    do_while_loop          go to state 170
    conditional_statement  go to state 171
    switch                 go to state 172
    if_header              go to state 173
    message_call           go to state 174


state 468

  226 switch_body: CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  227            | CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    error       shift, and go to state 489
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 490
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 491
    OPEN_ARR    shift, and go to state 150

    p_type          go to state 155
    logic_expr2     go to state 492
    expr2           go to state 493
    long_id         go to state 197
    simple_expr     go to state 494
    case_statement  go to state 495
    message_call    go to state 174


state 469

  222 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 222 (switch)


state 470

  223 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 223 (switch)


state 471

  225 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S .

    $default  reduce using rule 225 (switch)


state 472

  224 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error .

    $default  reduce using rule 224 (switch)


state 473

  221 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 221 (switch)


state 474

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 60 (variable_declarations)


state 475

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 496
    PLUS       shift, and go to state 229
    MINUS      shift, and go to state 230
    MULTI      shift, and go to state 231
    DIV        shift, and go to state 232


state 476

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 56 (variable_declarations)


state 477

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 61 (ArrayOne)


state 478

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 497


state 479

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 498


state 480

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 64 (ArrayOne)


state 481

   67 array_body: array_body COMMA OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  238 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 214
    INT_VAL     shift, and go to state 499
    OPEN_ARR    shift, and go to state 150

    message_call  go to state 215
    sender        go to state 216


state 482

   65 array_body: array_body COMMA expr .

    $default  reduce using rule 65 (array_body)


state 483

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   76 array_body2: array_body2 COMMA OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 500
    COMMA    shift, and go to state 451


state 484

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body . catch_statment

    CATCH    shift, and go to state 252
    FINALLY  shift, and go to state 253

    catch_statment  go to state 501


state 485

  153 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 153 (for_loop_header)


state 486

  151 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 151 (for_loop_header)


state 487

  150 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 150 (for_loop_header)


state 488

  228 switch_body: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  229            | DEFAULT SEMI_COLUMN statement . error SEMI_COMA

    error  shift, and go to state 502
    BREAK  shift, and go to state 503


state 489

   99 p_type: error . type CLOSE_P
  191 logic_expr2: error . expr2
  193            | error . logic_expr2 CLOSE_P

    error       shift, and go to state 489
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 490
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 491
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr2   go to state 504
    expr2         go to state 505
    long_id       go to state 197
    simple_expr   go to state 494
    message_call  go to state 174


state 490

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  188 logic_expr2: OPEN_P . logic_expr2 CLOSE_P
  192            | OPEN_P . logic_expr2 error
  208 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 489
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 490
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 491
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr2   go to state 506
    expr2         go to state 507
    long_id       go to state 197
    simple_expr   go to state 508
    message_call  go to state 174


state 491

  187 logic_expr2: NOT_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 509
    long_id       go to state 197
    simple_expr   go to state 494
    message_call  go to state 174


state 492

  189 logic_expr2: logic_expr2 . AND_AND logic_expr2
  190            | logic_expr2 . OR_OR logic_expr2
  232 case_statement: logic_expr2 .

    AND_AND  shift, and go to state 510
    OR_OR    shift, and go to state 511

    $default  reduce using rule 232 (case_statement)


state 493

  182 logic_expr2: expr2 . LESS_THAN expr2
  183            | expr2 . MORE_THAN expr2
  184            | expr2 . LESS_OR_EQUAL expr2
  185            | expr2 . MORE_OR_EQUAL expr2
  186            | expr2 . EQUAL_EQUAL expr2
  233 case_statement: expr2 .

    LESS_THAN      shift, and go to state 512
    MORE_THAN      shift, and go to state 513
    LESS_OR_EQUAL  shift, and go to state 514
    MORE_OR_EQUAL  shift, and go to state 515
    EQUAL_EQUAL    shift, and go to state 516

    $default  reduce using rule 233 (case_statement)


state 494

  194 expr2: simple_expr .
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 229
    MINUS  shift, and go to state 230
    MULTI  shift, and go to state 231
    DIV    shift, and go to state 232

    $default  reduce using rule 194 (expr2)


state 495

  226 switch_body: CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  227            | CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    CLOSE_P  shift, and go to state 517


state 496

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 59 (variable_declarations)


state 497

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 63 (ArrayOne)


state 498

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 518
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 499

   67 array_body: array_body COMMA OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 519


state 500

   76 array_body2: array_body2 COMMA OPEN_S array_body CLOSE_S .

    $default  reduce using rule 76 (array_body2)


state 501

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment .

    $default  reduce using rule 111 (catch_statment)


state 502

  229 switch_body: DEFAULT SEMI_COLUMN statement error . SEMI_COMA

    SEMI_COMA  shift, and go to state 520


state 503

  228 switch_body: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 521


state 504

  189 logic_expr2: logic_expr2 . AND_AND logic_expr2
  190            | logic_expr2 . OR_OR logic_expr2
  193            | error logic_expr2 . CLOSE_P

    CLOSE_P  shift, and go to state 522
    AND_AND  shift, and go to state 510
    OR_OR    shift, and go to state 511


state 505

  182 logic_expr2: expr2 . LESS_THAN expr2
  183            | expr2 . MORE_THAN expr2
  184            | expr2 . LESS_OR_EQUAL expr2
  185            | expr2 . MORE_OR_EQUAL expr2
  186            | expr2 . EQUAL_EQUAL expr2
  191            | error expr2 .

    LESS_THAN      shift, and go to state 512
    MORE_THAN      shift, and go to state 513
    LESS_OR_EQUAL  shift, and go to state 514
    MORE_OR_EQUAL  shift, and go to state 515
    EQUAL_EQUAL    shift, and go to state 516

    $default  reduce using rule 191 (logic_expr2)


state 506

  188 logic_expr2: OPEN_P logic_expr2 . CLOSE_P
  189            | logic_expr2 . AND_AND logic_expr2
  190            | logic_expr2 . OR_OR logic_expr2
  192            | OPEN_P logic_expr2 . error

    error    shift, and go to state 523
    CLOSE_P  shift, and go to state 524
    AND_AND  shift, and go to state 510
    OR_OR    shift, and go to state 511


state 507

  182 logic_expr2: expr2 . LESS_THAN expr2
  183            | expr2 . MORE_THAN expr2
  184            | expr2 . LESS_OR_EQUAL expr2
  185            | expr2 . MORE_OR_EQUAL expr2
  186            | expr2 . EQUAL_EQUAL expr2

    LESS_THAN      shift, and go to state 512
    MORE_THAN      shift, and go to state 513
    LESS_OR_EQUAL  shift, and go to state 514
    MORE_OR_EQUAL  shift, and go to state 515
    EQUAL_EQUAL    shift, and go to state 516


state 508

  194 expr2: simple_expr .
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  208            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 229
    MINUS    shift, and go to state 230
    CLOSE_P  shift, and go to state 255
    MULTI    shift, and go to state 231
    DIV      shift, and go to state 232

    $default  reduce using rule 194 (expr2)


state 509

  187 logic_expr2: NOT_EQUAL expr2 .

    $default  reduce using rule 187 (logic_expr2)


state 510

  189 logic_expr2: logic_expr2 AND_AND . logic_expr2

    error       shift, and go to state 489
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 490
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 491
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr2   go to state 525
    expr2         go to state 507
    long_id       go to state 197
    simple_expr   go to state 494
    message_call  go to state 174


state 511

  190 logic_expr2: logic_expr2 OR_OR . logic_expr2

    error       shift, and go to state 489
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 490
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 491
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr2   go to state 526
    expr2         go to state 507
    long_id       go to state 197
    simple_expr   go to state 494
    message_call  go to state 174


state 512

  182 logic_expr2: expr2 LESS_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 527
    long_id       go to state 197
    simple_expr   go to state 494
    message_call  go to state 174


state 513

  183 logic_expr2: expr2 MORE_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 528
    long_id       go to state 197
    simple_expr   go to state 494
    message_call  go to state 174


state 514

  184 logic_expr2: expr2 LESS_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 529
    long_id       go to state 197
    simple_expr   go to state 494
    message_call  go to state 174


state 515

  185 logic_expr2: expr2 MORE_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 530
    long_id       go to state 197
    simple_expr   go to state 494
    message_call  go to state 174


state 516

  186 logic_expr2: expr2 EQUAL_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 531
    long_id       go to state 197
    simple_expr   go to state 494
    message_call  go to state 174


state 517

  226 switch_body: CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  227            | CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement error SEMI_COMA switch_body

    SEMI_COLUMN  shift, and go to state 532


state 518

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 68 (array_body)


state 519

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 533


state 520

  229 switch_body: DEFAULT SEMI_COLUMN statement error SEMI_COMA .

    $default  reduce using rule 229 (switch_body)


state 521

  228 switch_body: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 228 (switch_body)


state 522

  193 logic_expr2: error logic_expr2 CLOSE_P .

    $default  reduce using rule 193 (logic_expr2)


state 523

  192 logic_expr2: OPEN_P logic_expr2 error .

    $default  reduce using rule 192 (logic_expr2)


state 524

  188 logic_expr2: OPEN_P logic_expr2 CLOSE_P .

    $default  reduce using rule 188 (logic_expr2)


state 525

  189 logic_expr2: logic_expr2 . AND_AND logic_expr2
  189            | logic_expr2 AND_AND logic_expr2 .
  190            | logic_expr2 . OR_OR logic_expr2

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 189 (logic_expr2)


state 526

  189 logic_expr2: logic_expr2 . AND_AND logic_expr2
  190            | logic_expr2 . OR_OR logic_expr2
  190            | logic_expr2 OR_OR logic_expr2 .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 190 (logic_expr2)


state 527

  182 logic_expr2: expr2 LESS_THAN expr2 .

    $default  reduce using rule 182 (logic_expr2)


state 528

  183 logic_expr2: expr2 MORE_THAN expr2 .

    $default  reduce using rule 183 (logic_expr2)


state 529

  184 logic_expr2: expr2 LESS_OR_EQUAL expr2 .

    $default  reduce using rule 184 (logic_expr2)


state 530

  185 logic_expr2: expr2 MORE_OR_EQUAL expr2 .

    $default  reduce using rule 185 (logic_expr2)


state 531

  186 logic_expr2: expr2 EQUAL_EQUAL expr2 .

    $default  reduce using rule 186 (logic_expr2)


state 532

  226 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement BREAK SEMI_COMA switch_body
  227            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement error SEMI_COMA switch_body

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 140 (@2)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 534
    @2                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    while_loop             go to state 168
    while_loop_header      go to state 169
    do_while_loop          go to state 170
    conditional_statement  go to state 171
    switch                 go to state 172
    if_header              go to state 173
    message_call           go to state 174


state 533

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 206
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 535
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    message_call  go to state 174


state 534

  226 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . BREAK SEMI_COMA switch_body
  227            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . error SEMI_COMA switch_body

    error  shift, and go to state 536
    BREAK  shift, and go to state 537


state 535

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 67 (array_body)


state 536

  227 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 538


state 537

  226 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 539


state 538

  227 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 435
    CASE     shift, and go to state 436

    switch_body  go to state 540


state 539

  226 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 435
    CASE     shift, and go to state 436

    switch_body  go to state 541


state 540

  227 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body .

    $default  reduce using rule 227 (switch_body)


state 541

  226 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body .

    $default  reduce using rule 226 (switch_body)
